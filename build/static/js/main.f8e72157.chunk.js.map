{"version":3,"sources":["Api/Api.js","Hooks/usePersState.js","Components/UI/Card/Card.js","Components/Categories/Categories.js","Components/UI/Modal/Modal.js","Components/UI/SlidePanel/SlideCard.js","Components/UI/SlidePanel/SlidePanel.js","Components/Ballot/Ballot.js","App.js","reportWebVitals.js","index.js"],"names":["api","getBallotData","fetch","then","res","json","usePersState","key","defaultValue","useState","persistedState","localStorage","getItem","JSON","parse","state","setState","useEffect","window","setItem","stringify","Card","React","memo","props","className","selected","onClick","click","children","Categories","categories","map","cat","index","title","catitems","item","isSelected","onSelectItem","bind","id","src","photoUrL","alt","Modal","message","Fragment","onClose","details","length","catitem","type","SlideCard","submission","sub","SlidePanel","Ballot","curCategories","setCategories","ready","ballotResults","isReady","setIsReady","showPanel","currentResults","curSubmissions","setSubmissions","apiHandler","Api","responseData","catagories","items","loadedCategories","push","validateBallot","submitBallotHandler","a","catChoice","filter","x","ballotChoice","console","log","catId","itemId","cats","find","select","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8e72157.chunk.js","sourcesContent":["const api = {\n  getBallotData() {\n    return fetch('/api/getBallotData').then(res => {\n      return res.json();\n    });\n  }\n};\n\nexport default api;","import { useEffect, useState } from 'react';\n\nconst usePersState = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    const persistedState = localStorage.getItem(key);\n    return persistedState ? JSON.parse(persistedState) : defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n  return [state, setState];\n}\n\nexport default usePersState;","import React from 'react';\nimport './Card.css';\n\nconst Card = React.memo(props => {\n  return (<div className=\"col\">\n            <div className={`card ${props.selected ? 'selected' : ''}`} onClick={props.click}>{props.children}</div>\n        </div>);\n});\n\nexport default Card;\n","import React from 'react';\nimport './Categories.css';\nimport Card from './../UI/Card/Card';\n\n\nconst Categories = (props) => props.categories.map((cat, index) => {\n  return (\n    <div key={cat.id} className='category'>\n        <h2>{cat.title}</h2>\n        <div className=\"row\">\n            {cat.catitems.map(item => (\n            <Card key={item.id} selected={item.isSelected} click={props.onSelectItem.bind(this, cat.id, item.id)}>\n                <h3>{item.title}</h3>\n                <img src={item.photoUrL} alt={item.title} />\n                <button>{item.isSelected ? 'Selected' : 'Select Nominee'}</button>\n            </Card>\n            ))}\n        </div>\n    </div>\n  );\n});\n\nexport default Categories;","import React from 'react';\n\nimport './Modal.css';\n\nconst Modal = React.memo(props => {\n  let message = <p>Please select a nominee for every category</p>\n  return(\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"modal\">\n        <h2>Success! Ballot Submitted</h2>\n        <p><strong>Check out your submission</strong></p>\n        {props.details.length !== 0 ? props.details.map(item => (\n            <li key={item.id}>\n                <h4>{item.cat}</h4>\n                <p><strong>Vote: </strong>{item.catitem[0].title}</p>\n            </li>\n        )) : message}\n\n        <div className=\"modal__actions\">\n          <button className=\"close-button\" type=\"button\" onClick={props.onClose}>\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default Modal;\n","import React from 'react';\n\nconst SlideCard = React.memo(props => {\n  return (\n    <div>\n        {props.submission.map(sub => (\n            <li key={sub.id}>\n                <p><strong>{sub.cat}</strong></p>\n                <p><i>{sub.catitem[0].title}</i></p>\n            </li>\n        ))}\n    </div>\n  );\n});\n\nexport default SlideCard;\n","import React from 'react';\nimport SlideCard from './SlideCard';\nimport './SlidePanel.css';\n\nconst SlidePanel = React.memo(props => {\n    let message = <p>No results have been submitted</p>\n    return (\n        <React.Fragment>\n            <div className=\"backdrop\" onClick={props.onClose} />\n            <div className=\"sidepanel\">\n            <h2>Latest Submissions</h2>\n            {props.details.length !== 0 ? \n                props.details.map((item, key) => {\n                return (\n                    <div key={key} className=\"slidecard-panel\">\n                        <h4>Submission {key+1}</h4>\n                        <SlideCard \n                            submission={item}\n                        />\n                    </div>\n                ) \n            }) : message}\n            <div className=\"sidepanel__actions\">\n                <button className=\"close-button\" type=\"button\" onClick={props.onClose}>\n                </button>\n            </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default SlidePanel;\n","import React, { useState, useEffect } from 'react';\nimport './Ballot.css';\nimport Api from '../../Api/Api';\nimport usePersState from '../../Hooks/usePersState';\nimport Categories from '../Categories/Categories';\nimport Modal from '../UI/Modal/Modal';\nimport SlidePanel from '../UI/SlidePanel/SlidePanel';\n\nconst Ballot = () => {\n  const defaultCat = []\n  const defaultSubmissions = ({showPanel:false, currentResults:[]})\n  const [curCategories, setCategories] = usePersState('curCategories', defaultCat);\n  const [isReady, setIsReady] = useState({ready:false, ballotResults:''});\n  const [curSubmissions, setSubmissions] = usePersState('curSubmissions', defaultSubmissions);\n\n  useEffect(() => {\n    if (curCategories.length === 0) {\n      apiHandler();\n    }\n  }, [curCategories.length, setCategories]);\n\n  useEffect(() => {\n      if (isReady.ballotResults.length !== 0 ) {\n        setSubmissions(curSubmissions => { return {...curSubmissions, currentResults: [...curSubmissions.currentResults, isReady.ballotResults]}})\n      }\n  }, [setSubmissions, isReady.ballotResults]);\n  \n  const apiHandler = () => {\n      Api.getBallotData()\n      .then(responseData => {\n        let catagories = responseData.items;\n        const loadedCategories = [];\n        for (const key in catagories) {\n          loadedCategories.push({\n            id: catagories[key].id,\n            title: catagories[key].title,\n            catitems: catagories[key].items,\n            isSelected:false,\n          });\n        }\n        setCategories(loadedCategories);\n      });\n  };\n    \n  const userSelectHandler = (catId, itemId) => {\n      let cats = [...curCategories];\n      let cat = cats.find(x => x.id === catId)\n      let select = cat.catitems.find(x => x.isSelected === true)\n      if (!cat.isSelected) {\n        cat.isSelected = true;\n        cat.catitems.find(x => x.id === itemId).isSelected = true;\n        setCategories(curCategories =>\n          cats\n        );\n      } else if (select) {\n        select.isSelected = '';\n        cat.catitems.find(x => x.id === itemId).isSelected = true;\n        setCategories(curCategories =>\n          cats\n        );\n      }\n  };\n  \n  const validateBallot = () => {\n      let ready = false;\n      for (const key in curCategories) {\n        if (curCategories[key].isSelected) {\n          setIsReady(isReady => ({\n              ...isReady,\n              ready: true\n          }));\n          ready = true;\n        } else {\n          setIsReady(isReady => ({\n              ...isReady,\n              ready: false\n          }));\n          ready = false;  \n        }\n      }\n      return ready;\n  }\n  const submitBallotHandler = async () => {\n      let ready = await validateBallot();\n      let catChoice = curCategories.filter(x => x.isSelected === true)\n      let ballotChoice = catChoice.map(cat => ({\n        id:cat.id,\n        cat:cat.title,\n        catitem:cat.catitems.filter(x => x.isSelected === true)\n      }));\n      if (ready) {\n        console.log('Ready', ready);\n        setIsReady(isReady => ({...isReady, ballotResults: ballotChoice}))\n        apiHandler();\n      }\n  };\n\n  const seeResultsHandler = () => {\n      setSubmissions(curSubmissions => ({...curSubmissions, showPanel: true}))\n  };\n\n  return (\n    <div className='ballot'>\n       {isReady.ready && <Modal \n          onClose={() => setIsReady(isReady => ({...isReady, ready: false}))}\n          details={isReady.ballotResults}>\n       </Modal>\n      }  \n      <h1>AWARDS 2021</h1>\n      <Categories\n        categories={curCategories}\n        onSelectItem={userSelectHandler}\n      />\n      {curSubmissions.showPanel && <SlidePanel \n          onClose={() => setSubmissions(curSubmissions => ({...curSubmissions, showPanel: false}))}\n          details={curSubmissions.currentResults}>\n       </SlidePanel>}\n      <button className=\"results-button\" onClick={seeResultsHandler}>See Current Results</button>\n       <button onClick={submitBallotHandler}>Submit Ballot</button> \n    </div>\n  );\n\n}\n\nexport default Ballot;\n","import './App.css';\nimport Ballot from './Components/Ballot/Ballot';\n\nfunction App() {\n  // Feel free to remove the contents of the header tag to make more room for your code\n  return (\n    <div className=\"App\">\n      <Ballot />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}